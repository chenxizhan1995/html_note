链接，仅仅是一个标签，但需要为它多考虑一些。

锚点对象和超文本引用
    用什么标签呢？a
    对于a来说，最重要的属性是href（意思是“超文本引用”），它的值指定了链接属性的目标。

    href的值可以是
        页内锚点  #something （同一页面内，#后是某个元素的id）
        同一文件夹 something.html
        同一站点    folder/something.html, ../folder2/something.html
        完全不同的服务器 http://www.htmldog.com/guides
链接状态
    链接有五种状态
        link        未被访问
        visited     链接被访问过
        hover       鼠标滑过链接
        focus       链接获得焦点（用tab键定位）
        active      链接被选中（鼠标按下）

    尚未访问：通常，突出颜色显示并添加下划线（为了照顾色盲用户）
    访问过：用淡一些的颜色
    鼠标滑过：目前一种流行的方式是，未访问的链接取消下划线，鼠标滑过时显示下划线。
        当然，也可以改变颜色，但不建议加错或更改字号，因为这会挤压周围的文字。
有亲和力的链接
    tab键导航
        按网页标准创建的页面，内容的所有链接都有一个逻辑顺序，自动形成了良好的tab键顺序。
        可以用tabindex指定页面中链接的tab顺序。从1开始
    快捷键
        可以为链接定义快捷键
        <a href="" accesskey="w" >whaterer</a>
        访问真按下ctrl或alt加上热键，浏览器会将焦点定位到定义热键的链接那里。
        通常，只给主要的链接（比如首要的导航链接）加上快捷键就够了。
        快捷键有两大问题
            一个是，用户不知道链接用的是哪个快捷键。
                一种解决方法是，以暗示性的方式定义，或在CSS中定义下划线或在链接文字中以高亮字母显示相应快捷键。这样的弊端是用户可能不明白它们到底意味着什么，或者，多数人不会理会快捷键，并且，这样做，页面与快捷键不能做到相互独立。
                <a href="balh.html" accesskey="b"> Blash(B) </a>
                另一种解决方式是，通过单独的说明性文字陈述快捷键及其分配方式。但这却增加了用户负担。
            另一个是，热键很可能与浏览器的快捷方式冲突。
                虽然可以精心设计，让快捷方式适应自己的浏览器或一部分浏览器，但是不同语言的浏览器呢？
            最后，没必要担心太多，它们并不实际，如果真的要用，试着用一些数字和很少用到的快捷键。
    链接提示文字
        在a标签中用title属性提供一个链接的信息说明。
    弹出窗口
        使用弹出窗口要小心。
        可以遵循下面的步骤以使它更加友好
        首先，用title属性告知用户点击此链接会创建一个新的弹出窗口，
        其次，如果用javaScript启动弹出窗口，它的返回值应该设为false，这样，如果用户禁用了js，仍然可以导航过去，只不过不是通过弹出窗口而已。
        <a href="eviltroll.html" title="Launch Evil in a little pop-up" onclick="popup(this); return false;">Evil Troll</a>
    相邻的链接
        根据WAI（Web Accessibility Initiative）的标准，为方便辨别相邻的链接之间应该有较多的空白。

        但尽量避免出现连续多个来链接。
    导航栏掠过
        考虑到用户有时候希望直接定位到导航栏而不用阅读全部的导航，可以创建一些链接让用户直接定位到正文部分。

        <p class="accessid"><a href="#content">Skip to content</a>
        <!--[ big chunk of navigation] -->
        <div id="content">
            <!--[the nitty gritty] -->
        </div>

        如果不需要，可以在CSS中设置隐藏。
        .accessid{
            position:absolute;
            height:0;
            overflow:hidden;
        }

        反过来，可以让正文位于导航栏的前面，然后添加“skip to navigation"链接。